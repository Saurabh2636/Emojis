{"version":3,"sources":["component/Emoji.js","App.js","index.js"],"names":["Emoji","props","useState","chosenEmoji","setChosenEmoji","abc","useMemo","setData","Data","emoji","className","onEmojiClick","event","emojiObject","App","check","setcheck","msg","setmsg","style","textAlign","type","value","onChange","e","target","onClick","pre","marginLeft","map","item","ind","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAkBeA,EAfD,SAACC,GACb,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAIMC,EAAMC,mBAAQ,WAClBL,EAAMM,QAAN,sBAAkBN,EAAMO,MAAxB,CAA6BL,EAAYM,WACxC,CAACN,IACJ,OACE,sBAAKO,UAAU,YAAf,UACGP,EAAcE,EAAK,GACpB,cAAC,IAAD,CAAQM,aATS,SAACC,EAAOC,GAC3BT,EAAeS,IAQuBH,UAAU,cC2CrCI,EAtDH,WACV,MAAwBZ,mBAAS,IAAjC,mBAAOM,EAAP,KAAaD,EAAb,KACA,EAA0BL,oBAAS,GAAnC,mBAAOa,EAAP,KAAcC,EAAd,KACA,EAAsBd,mBAAS,IAA/B,mBAAOe,EAAP,KAAYC,EAAZ,KAQA,OACE,qCACE,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,mDACA,sBAAKV,UAAU,sBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,uBACEA,UAAU,eACVW,KAAK,OACLC,MAAOd,EACPe,SAAU,SAACC,GACTjB,EAAQ,CAACiB,EAAEC,OAAOH,WAGtB,wBACEI,QAAS,WACPV,GAAS,SAACW,GAAD,OAAUA,MAFvB,0BAOA,wBACER,MAAO,CAAES,WAAY,OACrBF,QAAS,WA1BjBR,EAAO,GAAD,mBAAKD,GAAL,CAAUT,KAChBQ,GAAS,GACTT,EAAQ,KAsBF,qBASF,qBAAKG,UAAU,YAAf,SAA4BK,EAAQ,cAAC,EAAD,CAAOP,KAAMA,EAAMD,QAASA,IAAc,QAEhF,qBAAKG,UAAU,mBAAf,SACGO,EAAIY,KAAI,SAACC,EAAKC,GACb,OAAGA,EAAI,GAAG,EACE,oBAAaZ,MAAO,CAACa,gBAAgB,oBAArC,UAA0D,0CAAsBF,EAAhF,MAAQC,GAEb,oBAAaZ,MAAO,CAACa,gBAAgB,sBAAuBZ,UAAU,OAAtE,UAA+EU,EAA/E,IAAqF,8CAA7EC,YC7CzBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6a0f502c.chunk.js","sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport '../index.css';\r\nimport Picker from \"emoji-picker-react\";\r\nconst Emoji = (props) => {\r\n  const [chosenEmoji, setChosenEmoji] = useState('');\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    setChosenEmoji(emojiObject);\r\n  };\r\n  const abc = useMemo(() => {\r\n    props.setData([...props.Data,chosenEmoji.emoji]);\r\n  }, [chosenEmoji]);\r\n  return (\r\n    <div className='container'>\r\n      {chosenEmoji ? abc :''}\r\n      <Picker onEmojiClick={onEmojiClick} className='emoji' />\r\n    </div>\r\n  );\r\n};\r\nexport default Emoji;\r\n","import React, { useState } from \"react\";\nimport Emoji from \"./component/Emoji\";\nimport \"./index.css\";\nconst App = () => {\n  const [Data, setData] = useState([]);\n  const [check, setcheck] = useState(false);\n  const [msg, setmsg] = useState([]);\n  let out = Data;\n\n  const output = () => {\n    setmsg([...msg, Data]);\n    setcheck(false);\n    setData(\"\");\n  };\n  return (\n    <>\n      <h1 style={{ textAlign: \"center\" }}>Demo‚ù§üòçChat with Emoji</h1>\n      <div className=\"main grid-container\" >\n        <div className=\"input\" >\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            value={Data}\n            onChange={(e) => {\n              setData([e.target.value]);\n            }}\n          />\n          <button\n            onClick={() => {\n              setcheck((pre) => !pre);\n            }}\n          >\n            üòÅ\n          </button>\n          <button\n            style={{ marginLeft: \"8px\" }}\n            onClick={() => {\n              output();\n            }}\n          >\n            Send\n          </button>\n        </div>\n        <div className='grid-item'>{check ? <Emoji Data={Data} setData={setData} /> : \"\"}</div>\n      </div>\n      <div className='output grid-item'>\n        {msg.map((item,ind) => {\n          if(ind%2==0)\n               return <p key={ind} style={{backgroundColor:'rgb(212,144,144)'}}><strong>YOU:</strong>{item} </p>;       \n          else\n          return <p key={ind} style={{backgroundColor:'rgba(255,99,71,0.5)', textAlign:'end'}}>{item} <strong>:OTHER</strong></p>;       \n      })}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Emoji from './component/Emoji'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}